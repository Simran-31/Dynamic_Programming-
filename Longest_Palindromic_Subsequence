 int lcs(string str1,string str2,int n,int m ){
	    int t[n+1][m+1];
	    for(int i=0;i<=n;i++){
	        for(int j=0;j<=m;j++){
	            if(i==0||j==0){
	                t[i][j]=0;
	            }
	        }
	    }
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=m;j++){
	            if(str1[i-1]==str2[j-1]){
	                t[i][j]=1+t[i-1][j-1];
	            }
	            else{
	                t[i][j]=max(t[i-1][j],t[i][j-1]);
	            }
	        }
	    }
	    return t[n][m];
	}
    int longestPalindromeSubseq(string s) {
        int n=s.length();
        
        string rev_a=s;
        reverse(rev_a.begin(),rev_a.end());
        return lcs(s,rev_a,n,n);
    }
