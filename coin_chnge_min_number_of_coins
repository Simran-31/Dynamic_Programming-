
class Solution {
public:
    
    int coinChange1(vector<int>& coins,int n, int amount) {
       
        int t[n+1][amount+1];
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=amount;j++){
                if(j==0){
                    t[i][j]=0;
                }
                if(i==0){
                    t[i][j]= INT_MAX-1;
        
                }
                if(i==1){
                    if(j%coins[0]==0){
                        t[i][j]=j/coins[0];
                    }
                    else{
                        t[i][j]= INT_MAX-1;
                    }
                }
            }
        }
        t[0][0]=0;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=amount;j++){
                if(coins[i-1]<=j){
                    t[i][j]=min(t[i][j-coins[i-1]]+1,t[i-1][j]);
                    
                }
                else{
                    t[i][j]=t[i-1][j];
                }
            }
        }
        return t[n][amount];
    }
     int coinChange(vector<int>& coins, int amount) {
        int res = coinChange1(coins, coins.size(), amount);
        return (res == INT_MAX - 1) ? -1 : res;
    }
};
