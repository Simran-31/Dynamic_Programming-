class Solution {
public:
    int func(vector<int>&nums,int n,int sum){
        vector<vector<int>>t(n+1,vector<int>(sum+1,0));
        t[0][0]=1;
        
        for(int i=1;i<=n;i++){
            for(int j=0;j<=sum;j++){
                if(nums[i-1]<=j){
                    t[i][j]=(t[i-1][j]+t[i-1][j-nums[i-1]])%1000000007;
                }
                else{
                    t[i][j]=t[i-1][j];
                }
            }
        }
        return t[n][sum];
    }
    int findTargetSumWays(vector<int>& nums, int target) {
        int n=nums.size();
        int sumofarray=0;
        for(int i=0;i<n;i++){
            sumofarray+=nums[i];
        }
        if((sumofarray+target)%2!=0){
            return 0;
        }
         if (sumofarray < abs(target) || (target + sumofarray) % 2 > 0) return 0;
        else{
            return func(nums, n,(sumofarray+target)/2 );
        }
    }
};
