//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
	public:
	    int lcs(string a,string b,int n,int m){
	        int t[1001][1001];
	        for(int i=0;i<=n;i++){
	            for(int j=0;j<=m;j++){
	                if(i==0||j==0){
	                    t[i][j]=0;
	                }
	            }
	        }
	         for(int i=1;i<=n;i++){
	            for(int j=1;j<=m;j++){
	                if(a[i-1]==b[j-1]&&i!=j){
	                    t[i][j]=1+t[i-1][j-1];
	                }          
	                else{
	                    t[i][j]=max(t[i-1][j],t[i][j-1]);
	                }
	            }
	         }
	         return t[n][m];
	    }
		int LongestRepeatingSubsequence(string str){
		    // Code here
		    int n=str.length();
		    string a=str;
		    string b=str;
		    return lcs(a,b,n,n);
		}

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string str;
		cin >> str;
		Solution obj;
		int ans = obj.LongestRepeatingSubsequence(str);
		cout << ans << "\n";
	}
	return 0;
}
// } Driver Code Ends
