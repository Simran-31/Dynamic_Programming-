//RECURSIVE CODE 
//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int f(int i,int j,int isTrue,string &S){
        if(i>j)return 0;
        if(i==j){
            if(isTrue){
                return S[i]=='T';
            }
            else{
                return S[i]=='F';
            }
            
        }
        int ways=0;
        for(int k=i+1;k<=j-1;k=k+2){
            int lT=f(i,k-1,1,S);
            int lF=f(i,k-1,0,S);
            int rT=f(k+1,j,1,S);
            int rF=f(k+1,j,0,S);
            
            if(S[i]=='&'){
                if(isTrue){
                    ways=ways+(rT*lT);
                }
                else{
                    ways=ways+(rT*lF)+(rF*lT)+(rF*lF);
                }
            }
            else if(S[i]=='|'){
                if(isTrue){
                    ways=ways+(lT*rT)+(lT*rF)+(rF*lT);
                }
                else{
                    ways=ways+(rF*lF);
                }
            }
            else{
                if(isTrue){
                    ways=ways+(lT*rF)+(lF*rT);
                }
                else{
                    ways=ways+(lT*rT)+(rF*lF);
                }
            }
        }
        return ways;
    }
    int countWays(int N, string S){
        // code here
        return f(0,N-1,1,S);
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        string S;
        cin>>S;
        
        Solution ob;
        cout<<ob.countWays(N, S)<<"\n";
    }
    return 0;
}
// } Driver Code Ends
